// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/legosx/gopro-media-library-verifier/verify (interfaces: Fetcher)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/fetcher.go -package=mocks github.com/legosx/gopro-media-library-verifier/verify Fetcher
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	fetch "github.com/legosx/gopro-media-library-verifier/fetch"
	gomock "go.uber.org/mock/gomock"
)

// MockFetcher is a mock of Fetcher interface.
type MockFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockFetcherMockRecorder
}

// MockFetcherMockRecorder is the mock recorder for MockFetcher.
type MockFetcherMockRecorder struct {
	mock *MockFetcher
}

// NewMockFetcher creates a new mock instance.
func NewMockFetcher(ctrl *gomock.Controller) *MockFetcher {
	mock := &MockFetcher{ctrl: ctrl}
	mock.recorder = &MockFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFetcher) EXPECT() *MockFetcherMockRecorder {
	return m.recorder
}

// GetMedias mocks base method.
func (m *MockFetcher) GetMedias() ([]fetch.Media, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMedias")
	ret0, _ := ret[0].([]fetch.Media)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMedias indicates an expected call of GetMedias.
func (mr *MockFetcherMockRecorder) GetMedias() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMedias", reflect.TypeOf((*MockFetcher)(nil).GetMedias))
}
